{"version":3,"sources":["Components/App/App.js","reportWebVitals.js","Components/YourPass/yourPass.js","Components/History/history.js","index.js"],"names":["alphabet","symbols","numbers","symbolsMatching","alphabetUpperMatching","alphabetLowerMatching","passwordArray","passHistArray","App","props","state","length","password","copied","check","generatePassword","bind","faceIutput","copy","range","changeFace","changeFaceH","newArr","numberChecked","document","querySelector","checked","symbolChecked","upperCaseChecked","lowerCaseChecked","concat","map","upper","toUpperCase","i","some","arr","match","lower","num","parseInt","this","push","Math","floor","random","setState","setTimeout","join","localStorage","setItem","JSON","stringify","target","value","pass","getElementById","select","setSelectionRange","execCommand","r","min","max","val","style","backgroundSize","appear","appearH","className","type","readOnly","defaultValue","id","onClick","onInput","onChange","step","htmlFor","name","title","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","numberMatching","YourPass","emojy","changeFace2","emojyGen","inp","array","split","symbol","appear2","History","back","copyPassword","appear3","showUp","getItem","parse","filter","filt","n","Index","changeAppear","changeAppearH","here","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f87547fd.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\nconst symbols = ['@', '!', '#', '$', '%', '^', '&', '*', '?', '<', '>', '|', '/', '=', '+', '-', '~', ','];\nconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nconst symbolsMatching = /^[!@#$%^&*()_+\\-=\\]{};:~\\\\|,<>?]*$/;\nconst alphabetUpperMatching = /[A-Z]/g;\nconst alphabetLowerMatching = /[a-z]/;\n\n\n\nlet passwordArray = [];\nlet passHistArray = [];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { length: 4, password: '', copied: false, check: false };\n    this.generatePassword = this.generatePassword.bind(this);\n    this.faceIutput = this.faceIutput.bind(this);\n    this.copy = this.copy.bind(this);\n    this.range = this.range.bind(this);\n    this.changeFace = this.changeFace.bind(this);\n    this.changeFaceH = this.changeFaceH.bind(this);\n  }\n\n\n  generatePassword() {\n    let newArr = [];\n    //ინფუთების შენახვა\n    const numberChecked = document.querySelector('#number').checked;\n    const symbolChecked = document.querySelector('#symbols').checked;\n    const upperCaseChecked = document.querySelector('#uppercase').checked;\n    const lowerCaseChecked = document.querySelector('#lowercase').checked;\n\n\n    //პაროლის გენიალური გენერირება (ცოტა გრძლად)\n    if (numberChecked && symbolChecked && upperCaseChecked & lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols, alphabet, numbers, alphabet.map(upper => upper.toUpperCase()));\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && numberChecked && upperCaseChecked && lowerCaseChecked && newArr.some(arr => arr.match(symbolsMatching)) && newArr.some(upper => upper.match(alphabetUpperMatching)) && newArr.some(lower => lower.match(alphabetLowerMatching)) && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (numberChecked && symbolChecked && upperCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols, numbers, alphabet.map(upper => upper.toUpperCase()));\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && numberChecked && upperCaseChecked && newArr.some(arr => arr.match(symbolsMatching)) && newArr.some(upper => upper.match(alphabetUpperMatching)) && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (numberChecked && symbolChecked && lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols, numbers, alphabet);\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && numberChecked && lowerCaseChecked && newArr.some(arr => arr.match(symbolsMatching)) && newArr.some(lower => lower.match(alphabetLowerMatching)) && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (numberChecked && upperCaseChecked && lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(numbers, alphabet, alphabet.map(upper => upper.toUpperCase()));\n\n      for (let i = 0; i < 1000; i++) {\n        if (numberChecked && upperCaseChecked && lowerCaseChecked && newArr.some(upper => upper.match(alphabetUpperMatching)) && newArr.some(lower => lower.match(alphabetLowerMatching)) && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (symbolChecked && upperCaseChecked && lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols, alphabet, alphabet.map(upper => upper.toUpperCase()));\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && upperCaseChecked && lowerCaseChecked && newArr.some(arr => arr.match(symbolsMatching)) && newArr.some(upper => upper.match(alphabetUpperMatching)) && newArr.some(lower => lower.match(alphabetLowerMatching))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (numberChecked && symbolChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols, numbers);\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && numberChecked && newArr.some(arr => arr.match(symbolsMatching)) && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (numberChecked && upperCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(numbers, alphabet.map(upper => upper.toUpperCase()));\n\n      for (let i = 0; i < 1000; i++) {\n        if (numberChecked && upperCaseChecked && newArr.some(upper => upper.match(alphabetUpperMatching)) && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (numberChecked && lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(numbers, alphabet);\n\n      for (let i = 0; i < 1000; i++) {\n        if (numberChecked && lowerCaseChecked && newArr.some(lower => lower.match(alphabetLowerMatching)) && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (upperCaseChecked && lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(alphabet, alphabet.map(upper => upper.toUpperCase()))\n\n      for (let i = 0; i < 1000; i++) {\n        if (upperCaseChecked && lowerCaseChecked && newArr.some(upper => upper.match(alphabetUpperMatching)) && newArr.some(lower => lower.match(alphabetLowerMatching))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (symbolChecked && upperCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols, alphabet.map(upper => upper.toUpperCase()));\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && upperCaseChecked && newArr.some(arr => arr.match(symbolsMatching)) && newArr.some(upper => upper.match(alphabetUpperMatching))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (symbolChecked && lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols, alphabet);\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && lowerCaseChecked && newArr.some(arr => arr.match(symbolsMatching)) && newArr.some(lower => lower.match(alphabetLowerMatching))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (lowerCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(alphabet);\n\n      for (let i = 0; i < 1000; i++) {\n        if (lowerCaseChecked && newArr.some(lower => lower.match(alphabetLowerMatching))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (upperCaseChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(alphabet.map(upper => upper.toUpperCase()));\n\n      for (let i = 0; i < 1000; i++) {\n        if (upperCaseChecked && newArr.some(upper => upper.match(alphabetUpperMatching))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (symbolChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(symbols);\n\n      for (let i = 0; i < 1000; i++) {\n        if (symbolChecked && newArr.some(arr => arr.match(symbolsMatching))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    }\n\n    else if (numberChecked) {\n      passwordArray = [];\n      passwordArray = passwordArray.concat(numbers);\n\n      for (let i = 0; i < 1000; i++) {\n        if (numberChecked && newArr.some(num => parseInt(num))) {\n          break;\n        } else {\n          newArr = []\n          for (let i = 0; i < this.state.length; i++) {\n            newArr.push(passwordArray[Math.floor(Math.random() * passwordArray.length)]);\n          };\n        }\n      }\n    } else {\n      this.setState({ check: true });\n      setTimeout(() => {\n        this.setState({ check: false })\n      }, 1000)\n    }\n\n    //პაროლის შენახვა\n    this.setState({ password: newArr.join('') })\n\n    passHistArray.push(this.state.password);\n    localStorage.setItem('pasGenGot', JSON.stringify(passHistArray))\n  }\n  //სიგრძის შენახვა\n  faceIutput(num) {\n    this.setState({ length: num.target.value })\n  }\n\n\n\n  //დაკოპირება\n  copy() {\n    if (this.state.password) {\n      let pass = document.getElementById('password');\n      pass.select();\n      pass.setSelectionRange(0, 99999)\n      document.execCommand(\"copy\");\n      this.setState({ copied: true })\n      setTimeout(() => {\n        this.setState({ copied: false })\n      }, 1000)\n    }\n  }\n\n  //რეინჯის განსაზღვრა\n  range(r) {\n    let target = r.target;\n    let min = target.min;\n    let max = target.max;\n    let val = target.value;\n    target.style.backgroundSize = (val - min) * 100 / (max - min) + '% 100%'\n  }\n  //მომდევნო გვერდზე გადასვლა\n  changeFace() {\n    this.props.appear(true);\n  }\n\n  //ისტორიაზე გადასვლა\n  changeFaceH(){\n    this.props.appearH(true);\n  }\n\n  render() {\n    return (\n      <div className='generatorCard'>\n\n        <div className='row mb-3'>\n          <div className='col-12'>\n            <h1 className='title'>Password Generator</h1>\n          </div>\n        </div>\n\n        <div className='col-12'>\n          <div className='passwordBoard'>\n            {this.state.copied && <h2 className='copiedLocation'>Copied!</h2>}\n            <input type='text' readOnly defaultValue={this.state.password} id='password' className='passwordLocation' />\n            {!this.state.copied && <div><i onClick={this.copy} className=\"far fa-copy fa-2x\"></i></div>}\n          </div>\n        </div>\n\n        <div className='col-12 length'>\n          <p>LENGTH: <span>{this.state.length}</span></p>\n        </div>\n\n        <div className='col-12 rangeBox'>\n          <span>4</span>\n          <div className='rangeSpot'>\n            <input onInput={this.range} onChange={this.faceIutput} min='4' max='32' defaultValue='4' step='1' type=\"range\" />\n          </div>\n          <span>32</span>\n        </div>\n\n        <div className='col-12'>\n          <div className='row settings'>\n            <p>SETTINGS</p>\n          </div>\n          <div className='row flex'>\n            <label htmlFor='uppercase'>Include Uppercase</label>\n            <input className='toggle' id='uppercase' name='uppercase' type='checkbox' />\n          </div>\n          <div className='row flex margin'>\n            <label htmlFor='lowercase'>Include Lowercase</label>\n            <input className='toggle' id='lowercase' name='lowercase' type='checkbox' />\n          </div>\n          <div className='row flex margin'>\n            <label htmlFor='number'>Include Numbers</label>\n            <input className='toggle' id='number' name='number' type='checkbox' />\n          </div>\n          <div className='row flex margin'>\n            <label htmlFor='symbols'>Include Symbols</label>\n            <input className='toggle' id='symbols' name='symbols' type='checkbox' />\n          </div>\n        </div>\n\n        <div className='col-12 buttonBox'>\n          {!this.state.check && \n          <div className='buttonBox1'>\n          <button className='btnMy' onClick={this.generatePassword}> Generate Password</button>\n          <button onClick={this.changeFaceH} title='Generated Passwords History' className='history'><i className=\"fas fa-history\"></i></button>\n          </div>\n          }\n          {this.state.check && <button className='btnMy2'><i className=\"fas fa-exclamation-triangle check\"> Choose Type</i></button>}\n        </div>\n        <div className='row or'>\n            <p>OR</p>\n          </div>\n      \n          <div className='changeFace'>\n            <button onClick={this.changeFace}>Check Your Password</button>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './yourPass.css';\r\n\r\nconst symbolsMatching = /^[!@#$%^&*()_+\\-=\\]{};:~\\\\|,<>?]*$/;\r\nconst alphabetUpperMatching = /[A-Z]/g;\r\nconst alphabetLowerMatching = /[a-z]/;\r\nconst numberMatching = /[0-9]/;\r\n\r\n\r\nclass YourPass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { emojy: '' };\r\n        this.changeFace2 = this.changeFace2.bind(this);\r\n        this.emojyGen = this.emojyGen.bind(this);\r\n    }\r\n\r\n    //ემოჯის გენერატორი\r\n    emojyGen(inp) {\r\n        let value = inp.target.value;\r\n        let array = value.split('')\r\n\r\n        //ქონდიშენების შემოწმება\r\n        if (array.some(symbol => symbol.match(symbolsMatching)) && array.some(symbol => symbol.match(alphabetUpperMatching)) && array.some(symbol => symbol.match(alphabetLowerMatching)) && array.some(symbol => symbol.match(numberMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-kiss-wink-heart fa-3x green\"><span className='emojyText'>Perfect</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(symbolsMatching)) && array.some(symbol => symbol.match(alphabetUpperMatching)) && array.some(symbol => symbol.match(numberMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-grin-stars fa-3x moreGreen\"><span className='emojyText'>Good</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(symbolsMatching)) && array.some(symbol => symbol.match(alphabetLowerMatching)) && array.some(symbol => symbol.match(numberMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-grin-stars fa-3x moreGreen\"><span className='emojyText'>Good</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(alphabetUpperMatching)) && array.some(symbol => symbol.match(alphabetLowerMatching)) && array.some(symbol => symbol.match(numberMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-grin-stars fa-3x moreGreen\"><span className='emojyText'>Good</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(symbolsMatching)) && array.some(symbol => symbol.match(alphabetUpperMatching)) && array.some(symbol => symbol.match(alphabetLowerMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-grin-stars fa-3x moreGreen\"><span className='emojyText'>Good</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(numberMatching)) && array.some(symbol => symbol.match(symbolsMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-smile fa-3x lightGreen\"><span className='emojyText'>Okay</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(numberMatching)) && array.some(symbol => symbol.match(alphabetUpperMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-smile fa-3x lightGreen\"><span className='emojyText'>Okay</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(numberMatching)) && array.some(symbol => symbol.match(alphabetLowerMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-smile fa-3x lightGreen\"><span className='emojyText'>Okay</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(alphabetUpperMatching)) && array.some(symbol => symbol.match(alphabetLowerMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-smile fa-3x lightGreen\"><span className='emojyText'>Okay</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(alphabetUpperMatching)) && array.some(symbol => symbol.match(symbolsMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-smile fa-3x lightGreen\"><span className='emojyText'>Okay</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(symbolsMatching)) && array.some(symbol => symbol.match(alphabetLowerMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-smile fa-3x lightGreen\"><span className='emojyText'>Okay</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(symbolsMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-meh fa-3x yellow\"><span className='emojyText'>So so</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(numberMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-meh fa-3x yellow\"><span className='emojyText'>So so</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(alphabetLowerMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-meh fa-3x yellow\"><span className='emojyText'>So so</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.some(symbol => symbol.match(alphabetUpperMatching)) && array.length >= 4) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-meh fa-3x yellow\"><span className='emojyText'>So so</span></i>\r\n                    </div>\r\n            })\r\n        } else if (array.length < 4 && array.length > 0) {\r\n            this.setState({\r\n                emojy:\r\n                    <div>\r\n                        <i className=\"far fa-frown fa-3x red\"><span className='emojyText'>Bad</span></i>\r\n                    </div>\r\n            })\r\n        } else {\r\n            this.setState({\r\n                emojy: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    //წინა გვერდზე გადასვლა\r\n    changeFace2() {\r\n        this.props.appear2(false)\r\n    }\r\n\r\n    render() {\r\n        let emojy = this.state.emojy\r\n        return (\r\n            <div className='generatorCard'>\r\n                <h3 className='title2'>Password Control</h3>\r\n                <input type='text' className='inputYourPass' onInput={this.emojyGen} />\r\n                <div className='resultBox'>{emojy}</div>\r\n                <div className='changeFace'>\r\n                    <button onClick={this.changeFace2}><i className=\"fas fa-arrow-left fa-lg\"></i></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YourPass;","import React from 'react';\r\nimport './history.css';\r\n\r\nclass History extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { copied: false };\r\n        this.back = this.back.bind(this);\r\n        this.copyPassword = this.copyPassword.bind(this);\r\n    }\r\n    //უკან გასვლა\r\n    back() {\r\n        this.props.appear3(false)\r\n    }\r\n    //დაკოპირება\r\n    copyPassword(val) {\r\n        let pass = val.target;\r\n        pass.setSelectionRange(0, 99999)\r\n        document.execCommand(\"copy\");\r\n        this.setState({ copied: true })\r\n        setTimeout(() => {\r\n            this.setState({ copied: false })\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        let showUp = false;\r\n        if (localStorage.getItem('pasGenGot')) {\r\n            const genPasswordsFromHistory = JSON.parse(localStorage.getItem('pasGenGot'));\r\n            const lastPassArray = genPasswordsFromHistory.filter(filt => filt !== '')\r\n            showUp = lastPassArray.map(n =>\r\n                <li key={'pas_' + n}>\r\n                    <input readOnly defaultValue={n} onClick={this.copyPassword} />\r\n                </li>\r\n            )\r\n        }\r\n        return (\r\n            <div className='generatorCard'>\r\n                <h2 className='titleH'>History</h2>\r\n                {showUp &&  <h5 className='titleHs'>Press and copy</h5>}\r\n                <ul className='ulList'>\r\n                    {showUp}\r\n                </ul>\r\n                <div className='changeFace'>\r\n                    <button onClick={this.back}><i className=\"fas fa-arrow-left fa-lg\"></i></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default History;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport YourPass from './Components/YourPass/yourPass';\nimport History from './Components/History/history';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { appear: false , appearH: false};\n    this.changeAppear = this.changeAppear.bind(this);\n    this.changeAppearH = this.changeAppearH.bind(this);\n  }\n\n  changeAppear(here){\n      this.setState({appear: here})\n  }\n  changeAppearH(here){\n    this.setState({appearH: here})\n  }\n\n  render() {\n    let appear = this.state.appear;\n    let appearH = this.state.appearH;\n    \n    return (\n      <div>\n        {!appear && !appearH && <App appear={this.changeAppear} appearH={this.changeAppearH}/>}\n        {appear && <YourPass appear2={this.changeAppear}/>}\n        {appearH && <History appear3={this.changeAppearH}/>}\n      </div>\n    )\n  }\n}\n\nexport default Index;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}